/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.4-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.Rule;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-12-29T14:13:15.466Z[GMT]")

@Api(value = "rules", description = "the rules API")
public interface RulesApi {

    @ApiOperation(value = "Creates a new rule.", nickname = "addRule", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/rules",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addRule(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Rule body);


    @ApiOperation(value = "delete a rule by ID", nickname = "deleteRule", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "rule deleted"),
        @ApiResponse(code = 200, message = "unexpected error", response = Error.class) })
    @RequestMapping(value = "/rules/{ruleId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteRule(@ApiParam(value = "ID of rule to delete",required=true) @PathVariable("ruleId") Integer ruleId);


    @ApiOperation(value = "Returns a rule by ID.", nickname = "findRule", notes = "", response = Rule.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Rule.class) })
    @RequestMapping(value = "/rules/{ruleId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Rule> findRule(@ApiParam(value = "",required=true) @PathVariable("ruleId") Integer ruleId);


    @ApiOperation(value = "Returns an array of all rules", nickname = "getRules", notes = "", response = Rule.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Rule.class, responseContainer = "List") })
    @RequestMapping(value = "/rules",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Rule>> getRules();


    @ApiOperation(value = "Update a rule", nickname = "updateRule", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated") })
    @RequestMapping(value = "/rules",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateRule(@ApiParam(value = ""  )  @Valid @RequestBody Rule body);

}
