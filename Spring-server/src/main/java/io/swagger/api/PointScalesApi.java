/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.4-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PointScale;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-12-29T14:13:15.466Z[GMT]")

@Api(value = "pointScales", description = "the pointScales API")
public interface PointScalesApi {

    @ApiOperation(value = "Creates a new point scale.", nickname = "addPointScale", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/pointScales",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addPointScale(@RequestHeader(value = "Authorization") String headerStr, @ApiParam(value = "" ,required=true )  @Valid @RequestBody PointScale body);


    @ApiOperation(value = "Returns a point scale by ID.", nickname = "findPointScale", notes = "", response = PointScale.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PointScale.class) })
    @RequestMapping(value = "/pointScales/{pointScaleId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<PointScale> findPointScale(@RequestHeader(value = "Authorization") String headerStr, @ApiParam(value = "",required=true) @PathVariable("pointScaleId") Integer pointScaleId);


    @ApiOperation(value = "Returns an array of all point scales", nickname = "getPointScales", notes = "", response = PointScale.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PointScale.class, responseContainer = "List") })
    @RequestMapping(value = "/pointScales",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<PointScale>> getPointScales(@RequestHeader(value = "Authorization") String headerStr);


    @ApiOperation(value = "Update a point scale", nickname = "updatePointScale", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated") })
    @RequestMapping(value = "/pointScales",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updatePointScale(@RequestHeader(value = "Authorization") String headerStr, @ApiParam(value = ""  )  @Valid @RequestBody PointScale body);

}
